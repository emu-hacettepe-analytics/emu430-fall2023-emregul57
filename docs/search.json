[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Our Course Project",
    "section": "",
    "text": "I’m honored to be a member of the Synergy project team.\nBelow, you’ll find a brief summary of our project. To access a detailed project description, please go to SYNERGY’s Project Lab.\n\nSummary\n\nThe project uses a dataset on museums and libraries in Turkish cities, offering insights into library/museum counts, visitor numbers, and registered users. Analyzing cultural values over time helps gauge institutional usage and balance between demand and supply. The findings guide decisions on cultural service needs, deficiencies, and areas requiring development.\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello! My name is Emre Gul.\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "The second assignment involves the Advanced Search feature on https://m.imdb.com/search, allowing us to list available movie data on IMDb. The task is to scrape the HTML and extract the results. Assignment II consists of four parts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "B.S., Industrial Engineering, Hacettepe University, Turkey, 2019 - ongoing.\nHigh School, Aziz Atik High School, Turkey, 2014 - 2018"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nZer Merkezi Hizmetler ve Ticaret AS, E-Commerce Category Unit Intern, 08/2023 - 09/2023\nOtokoc Otomotiv, Used Car Pricing Intern 06/2023 - 08/2023"
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "My first assignment has three parts:"
  },
  {
    "objectID": "assignments/assignment-1.html#athe-video-i-watched-rstudio-cloud-demo-with-dr.-mine-çetinkaya-rundel",
    "href": "assignments/assignment-1.html#athe-video-i-watched-rstudio-cloud-demo-with-dr.-mine-çetinkaya-rundel",
    "title": "Assignment 1",
    "section": "(a)The video I watched : RStudio Cloud Demo with Dr. Mine Çetinkaya-Rundel",
    "text": "(a)The video I watched : RStudio Cloud Demo with Dr. Mine Çetinkaya-Rundel\n\nSummary\nRStudio Cloud demo presentation provides information about the usage and sharing of RStudio Cloud. RStudio Cloud is a cloud-based development environment designed primarily for educational purposes. Users can create projects, share them, and interact with students.\nHighlights\n-🏢 RStudio Cloud provides users with easy access to a specific educational environment.\n-🎓 You can collaborate in short-term activities by sharing a single project.\n-🔄 You can enable students to continuously work on their projects by copying them.\n-👀 You can assist and provide feedback to students by reviewing their projects.\n-💡 You can provide a starting point for students and standardize learning materials using basic projects."
  },
  {
    "objectID": "assignments/assignment-1.html#bthe-differences-between-r-and-python",
    "href": "assignments/assignment-1.html#bthe-differences-between-r-and-python",
    "title": "Assignment 1",
    "section": "(b)The differences between R and Python",
    "text": "(b)The differences between R and Python\n\n1.Syntax and Data Structures\nCreating a vector and performing vectorized operations in R\nnumbers &lt;- c(1, 2, 3, 4, 5)\nsquared &lt;- numbers^2\nmean_value &lt;- mean(numbers)\nCreating a list and performing element-wise operations in Python\nnumbers = [1, 2, 3, 4, 5]\nsquared = [x**2 for x in numbers]\nmean_value = sum(numbers) / len(numbers)\n\n\n2.Libraries and Ecosystem:\nUsing the dplyr package for data manipulation in R\nlibrary(dplyr)\ndf &lt;- data.frame(x = c(1, 2, 3, 4, 5), y = c(6, 7, 8, 9, 10))\nresult &lt;- df %&gt;% filter(x &gt; 2) %&gt;% select(y)\nUsing pandas for data manipulation in Python\nimport pandas as pd\ndf = pd.DataFrame({‘x’: [1, 2, 3, 4, 5], ‘y’: [6, 7, 8, 9, 10]})\nresult = df[df[‘x’] &gt; 2][‘y’]\n\n\n3.Function and Package Imports:\nLoading the ggplot2 package in R\nlibrary(ggplot2)\nggplot(df, aes(x, y)) + geom_point()\n# Importing the matplotlib library in Python\nimport matplotlib.pyplot as plt\nplt.scatter(df[‘x’], df[‘y’])\nplt.show()"
  },
  {
    "objectID": "assignments/assignment-1.html#c-na_example-data-set",
    "href": "assignments/assignment-1.html#c-na_example-data-set",
    "title": "Assignment 1",
    "section": "(c) na_example Data Set",
    "text": "(c) na_example Data Set\nInstall the “dslabs” package (only need to install once)\n#install.packages(“dslabs”)\n#Load the “dslabs” library\nlibrary(dslabs)\n#Load the “na_example” data\ndata(“na_example”)\n#Print the “na_example” data\nprint(na_example)\n#Check for NAs and replace them with 1\nna_check &lt;- ifelse(is.na(na_example), 1, 0)\n#Calculate the total number of NAs\nsum_na &lt;- sum(na_check)\nsum_na # Total number of NAs\n#Replace NAs with 0\nwithout_na &lt;- ifelse(is.na(na_example), 0, na_example)\n#Calculate the updated number of NAs (should be 0)\nupdated_num_na &lt;- sum(ifelse(is.na(without_na), 1, 0))\nupdated_num_na"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Fall 2023] EMU 430 Data Analytics course.\nPlease use left menu to navigate through my assignments.\nThe most recent update to this page was made on October 25, 2023\n\n\n\n Back to top"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "assignments/assignment-2.html#part-1",
    "href": "assignments/assignment-2.html#part-1",
    "title": "Assignment 2",
    "section": "Part 1",
    "text": "Part 1\n\nDefining URLs:\n\n\nShow the code\n#Defining the URL for those with a Release Date between 2010 and 2023\nurl1 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250\"\n#Defining the URL for those with a Release Date before 2010\nurl2 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250\""
  },
  {
    "objectID": "assignments/assignment-2.html#part-2",
    "href": "assignments/assignment-2.html#part-2",
    "title": "Assignment 2",
    "section": "Part 2",
    "text": "Part 2\n\nLoading necessary libraries:\n\n\nShow the code\nlibrary(tidyverse) # for everything :)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nShow the code\nlibrary(rvest) # for HTML scraping\n\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\n\nShow the code\nlibrary(stringr) # for string processing\nlibrary(knitr)\nlibrary(ggplot2)\n\n\n\n\nFor Titles:\n\n\nShow the code\ntitle1 &lt;- read_html(url1) %&gt;% \n  html_elements(\".ipc-title__text\") %&gt;% html_text()\ntitle1 &lt;- tail(head(title1,-1),-1)\ntitle1 &lt;- str_split(title1, \" \", n=2)\ntitle1 &lt;- unlist(lapply(title1, function(x) {x[2]}))\n\ntitle2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".ipc-title__text\") %&gt;% html_text()\ntitle2 &lt;- tail(head(title2,-1),-1)\ntitle2 &lt;- str_split(title2, \" \", n=2)\ntitle2 &lt;- unlist(lapply(title2, function(x) {x[2]}))\n#Combining Titles\nTitle &lt;- c(title1, title2)\n\n\n\n\nFor Years:\n\n\nShow the code\nyear1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(1)\") %&gt;%\n  html_text() %&gt;% as.numeric()\n\nyear2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(1)\") %&gt;%\n  html_text() %&gt;% as.numeric()\n#Combining Years\nYear &lt;- c(year1, year2)\n\n\n\n\nFor Durations :\n\n\nShow the code\nconvert_time_updated &lt;- function(time_string) {\n  total_hours &lt;- 0\n  total_minutes &lt;- 0\n  \n  if (grepl(\"h\", time_string)) {\n    time_parts &lt;- strsplit(time_string, \"h|m\")[[1]]\n    if (length(time_parts) &gt;= 1) {\n      total_hours &lt;- as.numeric(time_parts[1])\n    }\n    if (length(time_parts) &gt;= 2) {\n      total_minutes &lt;- as.numeric(time_parts[2])\n    }\n  } else {\n    total_minutes &lt;- as.numeric(gsub(\"m\", \"\", time_string))\n  }\n  \n  total_duration &lt;- total_hours * 60 + total_minutes\n  return(total_duration)\n}\n\nduration1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(2)\") %&gt;%\n  html_text()\nduration1 &lt;- unlist(lapply(duration1, convert_time_updated))\n\nduration2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(2)\") %&gt;%\n  html_text()\nduration2 &lt;- unlist(lapply(duration2, convert_time_updated))\n\nDuration &lt;- c(duration1, duration2)\n\n\n\n\nFor Ratings :\n\n\nShow the code\nrating1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".ratingGroup--imdb-rating\") %&gt;%\n  html_text()\nrating1 &lt;- str_extract(rating1, \"\\\\d+\\\\.\\\\d+\") %&gt;%\n  as.numeric()\n\nrating2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".ratingGroup--imdb-rating\") %&gt;%\n  html_text()\nrating2 &lt;- str_extract(rating2, \"\\\\d+\\\\.\\\\d+\") %&gt;%\n  as.numeric()\n\nRating &lt;- c(rating1, rating2)\n\n\n\n\nFor Votes :\n\n\nShow the code\nvotes1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".kRnqtn\") %&gt;%\n  html_text()\nvotes1 &lt;- gsub(\"\\\\D\", \"\", votes1) %&gt;%\n  as.numeric()\n\nvotes2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".kRnqtn\") %&gt;%\n  html_text()\nvotes2 &lt;- gsub(\"\\\\D\", \"\", votes2) %&gt;%\n  as.numeric()\n\nVotes &lt;- c(votes1, votes2)\n\n\n\n\nData Frame :\n\n\nShow the code\nmovies &lt;- data.frame(Title,Year,Duration,Rating,Votes)\nkable(head(movies, 10), caption = \"IMDB Turkish Movies\")\n\n\n\nIMDB Turkish Movies\n\n\nTitle\nYear\nDuration\nRating\nVotes\n\n\n\n\nKuru Otlar Üstüne\n2023\n197\n8.1\n5081\n\n\nIstanbul Için Son Çagri\n2023\n91\n5.3\n7376\n\n\nYedinci Kogustaki Mucize\n2019\n132\n8.2\n54161\n\n\nÖlümlü Dünya 2\n2023\n117\n7.5\n3472\n\n\nBihter\n2023\n113\n3.6\n3350\n\n\nÖlümlü Dünya\n2018\n107\n7.6\n30267\n\n\nKis Uykusu\n2014\n196\n8.0\n54642\n\n\nDag II\n2016\n135\n8.2\n109866\n\n\nDo Not Disturb\n2023\n114\n6.3\n8773\n\n\nAyla: The Daughter of War\n2017\n125\n8.3\n42991"
  },
  {
    "objectID": "assignments/assignment-2.html#part-i",
    "href": "assignments/assignment-2.html#part-i",
    "title": "Assignment 2",
    "section": "Part I",
    "text": "Part I\n\nDefining URLs:\n\n\nShow the code\n#Defining the URL for those with a Release Date between 2010 and 2023\nurl1 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250\"\n#Defining the URL for those with a Release Date before 2010\nurl2 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250\""
  },
  {
    "objectID": "assignments/assignment-2.html#part-ii",
    "href": "assignments/assignment-2.html#part-ii",
    "title": "Assignment 2",
    "section": "Part II",
    "text": "Part II\n\nLoading necessary libraries:\n\n\nShow the code\nlibrary(tidyverse) # for everything :)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nShow the code\nlibrary(rvest) # for HTML scraping\n\n\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\n\nShow the code\nlibrary(stringr) # for string processing\nlibrary(knitr)\nlibrary(ggplot2)\n\n\n\n\nFor Titles:\n\n\nShow the code\ntitle1 &lt;- read_html(url1) %&gt;% \n  html_elements(\".ipc-title__text\") %&gt;% html_text()\ntitle1 &lt;- tail(head(title1,-1),-1)\ntitle1 &lt;- str_split(title1, \" \", n=2)\ntitle1 &lt;- unlist(lapply(title1, function(x) {x[2]}))\n\ntitle2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".ipc-title__text\") %&gt;% html_text()\ntitle2 &lt;- tail(head(title2,-1),-1)\ntitle2 &lt;- str_split(title2, \" \", n=2)\ntitle2 &lt;- unlist(lapply(title2, function(x) {x[2]}))\n#Combining Titles\nTitle &lt;- c(title1, title2)\n\n\n\n\nFor Years:\n\n\nShow the code\nyear1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(1)\") %&gt;%\n  html_text() %&gt;% as.numeric()\n\nyear2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(1)\") %&gt;%\n  html_text() %&gt;% as.numeric()\n#Combining Years\nYear &lt;- c(year1, year2)\n\n\n\n\nFor Durations :\n\n\nShow the code\nconvert_time_updated &lt;- function(time_string) {\n  total_hours &lt;- 0\n  total_minutes &lt;- 0\n  \n  if (grepl(\"h\", time_string)) {\n    time_parts &lt;- strsplit(time_string, \"h|m\")[[1]]\n    if (length(time_parts) &gt;= 1) {\n      total_hours &lt;- as.numeric(time_parts[1])\n    }\n    if (length(time_parts) &gt;= 2) {\n      total_minutes &lt;- as.numeric(time_parts[2])\n    }\n  } else {\n    total_minutes &lt;- as.numeric(gsub(\"m\", \"\", time_string))\n  }\n  \n  total_duration &lt;- total_hours * 60 + total_minutes\n  return(total_duration)\n}\n\nduration1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(2)\") %&gt;%\n  html_text()\nduration1 &lt;- unlist(lapply(duration1, convert_time_updated))\n\nduration2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".dli-title-metadata-item:nth-child(2)\") %&gt;%\n  html_text()\nduration2 &lt;- unlist(lapply(duration2, convert_time_updated))\n\nDuration &lt;- c(duration1, duration2)\n\n\n\n\nFor Ratings :\n\n\nShow the code\nrating1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".ratingGroup--imdb-rating\") %&gt;%\n  html_text()\nrating1 &lt;- str_extract(rating1, \"\\\\d+\\\\.\\\\d+\") %&gt;%\n  as.numeric()\n\nrating2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".ratingGroup--imdb-rating\") %&gt;%\n  html_text()\nrating2 &lt;- str_extract(rating2, \"\\\\d+\\\\.\\\\d+\") %&gt;%\n  as.numeric()\n\nRating &lt;- c(rating1, rating2)\n\n\n\n\nFor Votes :\n\n\nShow the code\nvotes1 &lt;- read_html(url1) %&gt;%\n  html_elements(\".kRnqtn\") %&gt;%\n  html_text()\nvotes1 &lt;- gsub(\"\\\\D\", \"\", votes1) %&gt;%\n  as.numeric()\n\nvotes2 &lt;- read_html(url2) %&gt;%\n  html_elements(\".kRnqtn\") %&gt;%\n  html_text()\nvotes2 &lt;- gsub(\"\\\\D\", \"\", votes2) %&gt;%\n  as.numeric()\n\nVotes &lt;- c(votes1, votes2)\n\n\n\n\nData Frame :\n\n\nShow the code\nmovies &lt;- data.frame(Title,Year,Duration,Rating,Votes)\nprint(head(movies, 15))\n\n\n                       Title Year Duration Rating  Votes\n1          Kuru Otlar Üstüne 2023      197    8.1   5090\n2    Istanbul Için Son Çagri 2023       91    5.3   7398\n3   Yedinci Kogustaki Mucize 2019      132    8.2  54172\n4             Ölümlü Dünya 2 2023      117    7.5   3490\n5                     Bihter 2023      113    3.6   3356\n6               Ölümlü Dünya 2018      107    7.6  30270\n7                 Kis Uykusu 2014      196    8.0  54647\n8                     Dag II 2016      135    8.2 109870\n9             Do Not Disturb 2023      114    6.3   8781\n10 Ayla: The Daughter of War 2017      125    8.3  42992\n11              Kurak Günler 2022      129    7.6  11167\n12               Ahlat Agaci 2018      188    8.0  27015\n13   Bir Zamanlar Anadolu'da 2011      157    7.8  49365\n14       Dabbe: Cin Çarpmasi 2013      134    6.8   7109\n15                    Baskin 2015       97    5.8  12107"
  },
  {
    "objectID": "assignments/assignment-2.html#part-iii",
    "href": "assignments/assignment-2.html#part-iii",
    "title": "Assignment 2",
    "section": "Part III",
    "text": "Part III\n\nA) Top 5 and Bottom 5 Movies by Rating\n\nTop 5 Movies by Rating\n\n\nShow the code\ntop_movies &lt;- movies[order(movies$Rating, decreasing = TRUE),]\n\ntop5 &lt;- head(top_movies, 5)\nprint(top5)\n\n\n                           Title Year Duration Rating Votes\n257               Hababam Sinifi 1975       87    9.2 42512\n39        CM101MMXI Fundamentals 2013      139    9.1 46997\n273                   Tosun Pasa 1976       90    8.9 24329\n337 Hababam Sinifi Sinifta Kaldi 1975       95    8.9 24369\n321                Süt Kardesler 1976       80    8.8 20889\n\n\nI’ve watched all of them multiple times, and I believe they deserve the ratings they received.\n\n\nBottom 5 Movies by Rating\n\n\nShow the code\n# Arrange the data frame in descending order by Rating\nbot_movies &lt;- movies[order(movies$Rating, decreasing = TRUE),]\n\n# Top 5 and bottom 5 movies based on user ratings\nbottom5 &lt;- tail(bot_movies, 5)\nprint(bottom5)\n\n\n                             Title Year Duration Rating Votes\n189                 Cumali Ceber 2 2018      100    1.2 10230\n199                          Müjde 2022       48    1.2  9920\n245              15/07 Safak Vakti 2021       95    1.2 20608\n101 Cumali Ceber: Allah Seni Alsin 2017      100    1.0 39269\n150                           Reis 2017      108    1.0 73974\n\n\nI haven’t watched any of them, and I don’t intend to. Just the IMDb rating can convey a lot about a movie. I am definitely biased against these films :)\n\n\n\nB) My Top 3 Favorite Turkish Movies\n\n\nShow the code\nfavorite_movies &lt;-movies %&gt;% filter(Title %in% c(\"Masumiyet\", \"Babam ve Oglum\", \"Yahsi Bati\"))\nprint(favorite_movies)\n\n\n           Title Year Duration Rating Votes\n1 Babam ve Oglum 2005      108    8.2 91037\n2      Masumiyet 1997      110    8.1 19295\n3     Yahsi Bati 2009      112    7.4 37784\n\n\nI believe they deserve the ratings they received. The rating for Yahşi Batı could have been a bit higher. In my opinion, it’s Cem Yılmaz’s funniest movie, but some people think it’s not as good as GORA and AROG.\n\n\nC)Plots\n\nAverage Ratings of Turkish Movies Over the Years\n\n\nShow the code\nmovies %&gt;%\n  group_by(Year) %&gt;% summarize(ave_rating = mean(Rating)) %&gt;%\n  ggplot(aes(Year, ave_rating)) + geom_point() +\n  labs(x = \"Year\", y = \"Rating Averages\") +\n  ggtitle(\"Average Ratings of Turkish Movies Over the Years\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nOver the years, it is observed that the rating of Turkish movies has decreased. I wonder about the reason behind this. I believe it might be due to the lack of meaningful stories and scripts.\n\n\nNumber of Movies Over the Years\n\n\nShow the code\nggplot(movies, aes(x = factor(Year))) +\n  geom_bar(fill = \"purple\", color = \"#FBDA21\") +\n  labs(x = \"Year\", y = \"Number of Movies\") +\n  ggtitle(\"Number of Movies Over the Years\") +\n  theme_minimal() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 90),\n        plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\nAverage Ratings Over the Years\n\n\nShow the code\nggplot(movies, aes(x = Year, y = Rating, fill = factor(Year))) +\n  geom_boxplot() +\n  labs(x = \"Year\", y = \"Rating\") +\n  ggtitle(\"Average Ratings Over the Years\") +\n  theme_minimal()+ theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\nD)Votes and Ratings\n\nCorrelation between Votes and Ratings:\n\n\nShow the code\ncorrelation &lt;- cor(movies$Votes, movies$Rating)\nprint(correlation)\n\n\n[1] 0.1308758\n\n\n\n\nShow the code\nggplot(movies, aes(x = Votes, y = Rating, color = factor(Rating))) +\n  geom_point(color = \"purple\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"#FBDA21\", formula = y ~ x) +\n  labs(x = \"Votes\", y = \"Rating\") +\n  ggtitle(\"Scatter Plot of Votes vs Rating\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nThe value of 0.130875 represents a quite low correlation. In this case, we can say that there is a weak linear relationship between Votes and Ratings.\n\n\n\nE)Durations and Ratings\n\nCorrelation between Durations and Ratings:\n\n\nShow the code\ncorrelation1 &lt;- cor(movies$Duration, movies$Rating)\nprint(correlation1)\n\n\n[1] 0.03356006\n\n\n\n\nShow the code\nggplot(movies, aes(x = Duration, y = Rating, color = factor(Rating))) +\n  geom_point(color = \"purple\") +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"#FBDA21\", formula = y ~ x) +\n  labs(x = \"Duration\", y = \"Rating\") +\n  ggtitle(\"Scatter Plot of Votes vs Rating\") +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\nThe value of 0.03356006 represents a quite low correlation. In this case, we can say that there is a weak linear relationship between Votes and Durations. When comparing Ratings with Votes and Rating with Durations, we can say that there is a stronger connection between Ratings and Votes."
  },
  {
    "objectID": "assignments/assignment-2.html#part-iv",
    "href": "assignments/assignment-2.html#part-iv",
    "title": "Assignment 2",
    "section": "Part IV",
    "text": "Part IV\n\nTurkish Movies Top 1000 Movies on IMDb\n\n\nShow the code\nurl3 &lt;- \"https://m.imdb.com/search/title/?title_type=feature&groups=top_1000&country_of_origin=TR\"\n\ntitle3 &lt;- read_html(url3) %&gt;% \n  html_elements(\".ipc-title__text\") %&gt;% html_text()\ntitle3 &lt;- tail(head(title3,-1),-1)\ntitle3 &lt;- str_split(title3, \" \", n=2)\ntitle3 &lt;- unlist(lapply(title3, function(x) {x[2]}))\n\nyear3 &lt;- read_html(url3)%&gt;%html_elements(\".dli-title-metadata-item:nth-child(1)\")\nyear3 &lt;- html_text(year3)\nyear3 &lt;- as.factor(year3)\n\ntop1000 &lt;- data.frame(Title=title3,Year=year3)\nprint(top1000)\n\n\n                       Title Year\n1   Yedinci Kogustaki Mucize 2019\n2                 Kis Uykusu 2014\n3      Nefes: Vatan Sagolsun 2009\n4  Ayla: The Daughter of War 2017\n5             Babam ve Oglum 2005\n6                Ahlat Agaci 2018\n7    Bir Zamanlar Anadolu'da 2011\n8                     Eskiya 1996\n9                   G.O.R.A. 2004\n10                 Vizontele 2001\n11  Her Sey Çok Güzel Olacak 1998\n\n\n\n\nCombining Data Frames\n\n\nShow the code\ntop1000$Year &lt;- as.numeric(as.character(top1000$Year))\n\njoineddata &lt;- left_join(top1000,movies, by = c(\"Title\", \"Year\"))\nprint(joineddata)\n\n\n                       Title Year Duration Rating Votes\n1   Yedinci Kogustaki Mucize 2019      132    8.2 54172\n2                 Kis Uykusu 2014      196    8.0 54647\n3      Nefes: Vatan Sagolsun 2009      128    8.0 35022\n4  Ayla: The Daughter of War 2017      125    8.3 42992\n5             Babam ve Oglum 2005      108    8.2 91037\n6                Ahlat Agaci 2018      188    8.0 27015\n7    Bir Zamanlar Anadolu'da 2011      157    7.8 49365\n8                     Eskiya 1996      128    8.1 71704\n9                   G.O.R.A. 2004      127    8.0 66032\n10                 Vizontele 2001      110    8.0 38403\n11  Her Sey Çok Güzel Olacak 1998      107    8.1 27122\n\n\n\n\nTop 11 Turkish Movie Based on Rating\n\n\nShow the code\ntop_movies &lt;- movies[order(movies$Rating, decreasing = TRUE),]\n\ntop11 &lt;- head(top_movies, 11)\nprint(top11)\n\n\n                           Title Year Duration Rating Votes\n257               Hababam Sinifi 1975       87    9.2 42512\n39        CM101MMXI Fundamentals 2013      139    9.1 46997\n273                   Tosun Pasa 1976       90    8.9 24329\n337 Hababam Sinifi Sinifta Kaldi 1975       95    8.9 24369\n321                Süt Kardesler 1976       80    8.8 20889\n284             Saban Oglu Saban 1977       90    8.7 18534\n307                   Zügürt Aga 1985      101    8.7 16136\n317                Neseli Günler 1978       95    8.7 11807\n323                  Kibar Feyzo 1978       83    8.7 17126\n380      Hababam Sinifi Uyaniyor 1976       94    8.7 20640\n343               Canim Kardesim 1973       85    8.6 10097\n\n\nThe first data frame does not have a single film that matches the IMDb top 1000. I believe the differences I observed when comparing the two tables are in the film years and votes. It seems that the Top 1000 includes more recent films with significantly higher votes. (Note: I don’t know why CM101MMXI Fundamentals is in the second list 😊)"
  }
]